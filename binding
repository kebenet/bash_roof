#!/bin/sh

terabomap=1

__auto(){

	if [ $terabomap -eq 0 ]; then
		READLINE_LINE="${READLINE_LINE}:"
		READLINE_POINT=${#READLINE_LINE}
		return
	fi

	local item
	old="${READLINE_LINE}"
	
	item=$(_get_script_fn | fuzzy one "$old")

	READLINE_LINE="${item}"
	READLINE_POINT=${#READLINE_LINE}

}

onoff() {
    if [ $terabomap -eq 0 ]; then
        terabomap=1
    else
        terabomap=0
    fi
}


_get_active_fn(){

	if [ $terabomap -eq 0 ]; then
		READLINE_LINE="${READLINE_LINE}?"
		READLINE_POINT=${#READLINE_LINE}
		return
	fi

	old="${READLINE_LINE}"
	second=$(echo "$old" | cut -d' ' -f2)
	old=$(echo "$old" | cut -d' ' -f1)
	view="$(get_var 'subl_active_view')"
	item=$(rg "^(\w+)" -o "${view}" |fuzzy one "$second")

	READLINE_LINE="${old} ${item}"
	READLINE_POINT=${#READLINE_LINE}
}


_get_script_fn(){
	fd . -t f --base-directory "$TT_BASH/scripts" -X \
	rg '^fn_\w+' --no-heading -No --color=never |
	sd 'fn_' '' | sd -F ':' ' ' | rg ' \w+'
}

_get_script_file(){

	item=$(fdls --base-directory "$TT_BASH/scripts" |fuzzy one)
	echo "$item"
}

__script_complete(){	# completion sub commands

	old="${READLINE_LINE}"
	item=$(_get_script_file)

	READLINE_LINE="${old}${item}"
	READLINE_POINT=${#READLINE_LINE}

}


__cmd_complete(){
	
	old="${READLINE_LINE}"
	all=$(
	{
	    declare -F | awk '{print $3}' | grep -v '^__'
	    alias | awk -F'[ =]' '{print $2}'
	    export | cut -d "=" -f 1 | awk '{print "$"$3}'
	} | sort -u | fzy
	)

	READLINE_LINE="${old}${all}"
	READLINE_POINT=${#READLINE_LINE}
	
}


__last() {

	item=$(history  1 | cut -c 8- \
		| warp head '$('|warp tail ')')
    READLINE_LINE="${READLINE_LINE}${item}"
	READLINE_POINT=0
	# READLINE_POINT=${#READLINE_LINE}

}
