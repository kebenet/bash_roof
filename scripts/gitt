#!/bin/bash


fn_add(){	# Add multiple files and commit msg

	set -e
	desc=$(_read-desc)

	shift
	git add "$@"
	git commit -m "$desc"

}

fn_recent(){	# Add multiple files and commit msg

	item=$(_get_recent_change "$2")
	echo "gitt add $item"
}

_get_recent_change(){

	mnt="${1:-1}"

	thedir=$(_get_top_dir)

	cd "$thedir"
	fd . --changed-within ${mnt}m | liner join
}

_get_top_dir(){
	item=$(git rev-parse --show-toplevel)
	[ $? -ne 0 ]  && exit 7

}
fn_all(){	# Auto Add files and commit msg

	fn_ls
	set -e
	desc=$(_read-desc)
	git commit -a -m "$desc"

}

fn_single(){	# Add single file and commit
	set -e
	local thefile="$2"

	item=$(_first_uncommit_file)
	[ -z "$item" ] && echo 'no uncommit file..' && exit 7
	[ ! -f "$thefile" ] && echo 'no file arg..' && exit 7

	desc=$(_read-desc)
	git add "$thefile"
	git commit -m "$desc"
}

fn_commit(){	# Add  commit msg only
	desc=$(_read-desc)
	git commit -m "$desc"
}


fn_ls(){	# list: uncommit files
	_is_gitdir
	git diff --name-only
}

fn_mv(){	# list: uncommit files
	_is_gitdir
	git "$1" "$2"
}


fn_lsu(){	# list: Untracked files
	git ls-files --others --exclude-standard
}

fn_branch(){	# get: current branch
	git branch
	git branch --show-current
}

_is_gitdir(){
	item=$(git status)
	[ ! "$item" ] && exit 7
}

_first_uncommit_file(){
	git diff --name-only | sed -n '1p'
}

_read-desc(){

	read -erp "Descriptions $ARROW " _desc
	[ ! "$_desc" ] && echo 'empty description..' >&2 && exit 7
	echo "$_desc"
}

"fn_$1" "$@"