#!/bin/bash
#FILE! Player for testing scripts

# save into scripts db
DB_FILE="$TT_VAR/bash_script_play.ttdb"
PLAY_FILE="$TT_BASH/scripts/_play_runner"
SAPERATOR="#@=>PLAY!"
PLAY_TITLE="#TITLE!"
_RECORD_NAME='PLAY_last_record'
# LAST_RECORD=`varmem get "$_RECORD_NAME"`

fn_new() {	# create new PLAY item [-s] for save

	if [ ${!#} == '-s' ]; then
		fn_save
	fi
	# index=`wc -l "$DB_FILE"`
	{
		echo "#!/bin/bash"
		echo "${PLAY_TITLE} "
		echo ""
		echo "echo hello TERABO"
	} > "$PLAY_FILE"

	st reload "$PLAY_FILE"

}


fn_save() {	# save PLAY item into db with title

	if title=$(_ensure_title); then

		newdate=$(date +%Y-%m-%d)
		{
			echo "${SAPERATOR}$title:$newdate"
			awk 'NR>2 {print}' "$PLAY_FILE"
		} >> "$DB_FILE"

		_update_title_index "$title"
		st reload "$PLAY_FILE"
	fi
}


fn_load() {	# search & select Play item

	local title

	if ! title=$(_search); then
		color 'User: Canceling...' 
		exit 7
	fi

	item=`_get_code "$title"`

	titleb=`echo "$title" | tool cut 2`
	index=`echo "$title" | tool cut 1`
	{
		echo "#!/bin/bash"
		echo "${PLAY_TITLE} ${titleb}:$index"
		echo "$item" 
	} > "$PLAY_FILE"

	st reload "$PLAY_FILE"
}

fn_last() {	# search & view LAST Play item

	item=$(rg "^${SAPERATOR}" -n  "$DB_FILE"| sd "${SAPERATOR}" "" \
	| cut -d: -f 1,2| tail -n 1)
	{
		echo "#!/bin/bash"
		_get_code "$item"
	} > "$PLAY_FILE"

	st reload "$PLAY_FILE"

}

fn_update_last() {	# Update Last Play item

	index=`_get_last_record_index`

	range delete_tail $index "$DB_FILE"

	fn_save

}

_update_title_index(){

	title="$1"
	index=`_get_last_record_index`

	if [ -z "$title" ]; then
		title=`tool line 2 "$PLAY_FILE" | tool cut 1`
		title="${title}:${index}"
	else
		title="${PLAY_TITLE} ${title}:${index}"
	fi

	range change 2 "$title" "$PLAY_FILE"
}

fn_update() {	# Update Play item from original position
	# set -x
	title=`tool line 2 "$PLAY_FILE" | tool cutd ' ' 2-`
	index=$(echo "$title" | tool cut 2)

	#TODO: refactor saperator delimiter ':'
	thedate=$(tool line "$index" "$DB_FILE" | tool cut 2)
	
	title=$(echo "$title" | tool cut 1)

	count=$(range lineto "$index" "^$SAPERATOR" "$DB_FILE" | wc -l)
	end=$((index+count))

	if range delete "$index" "$end" "$DB_FILE"; then

		newdata=$(
			echo "${SAPERATOR}$title:$thedate"
			awk 'NR>2 {print}' "$PLAY_FILE"
		)

		range insert "$index" "$newdata" "$DB_FILE" > "$TT_TEMP"
		mv "$TT_TEMP" "$DB_FILE"
	fi
	# get item position by? title!


}

fn_rename() {	# Rename Play title

	# get item by title at DB_FILE
	title=`tool line 2 "$PLAY_FILE" | tool cutd ' ' 2-`
	index=$(echo "$title" | tool cut 2)
	thedate=$(tool line "$index" "$DB_FILE" | tool cut 2)

	title=$(echo "$title" | tool cut 1)


	newtitle="$SAPERATOR${title}:$thedate"
	range change "$index" "$newtitle" "$DB_FILE"

}

fn_cat() {	# search & view Play item at terminal
	_search
}

fn_ls() {	# list all Play items
	rg "^${SAPERATOR}" "$DB_FILE"| sd ".*${SAPERATOR}" "" |
	awk -F ':' '{ printf "- %s:\t%s\n", $1, $2 }' |
	column -t -s $'\t' | color
}


fn_db() {	# Open Play Database file
	st open "$DB_FILE"
}


fn_sub() {	# Open Play file
	st open "$PLAY_FILE"
}


# ================================================= Private functions


_search() {
	_get_records | cut -d: -f 1,2 | fzy
}

_get_records(){
	rg "^${SAPERATOR}" -n  "$DB_FILE" | sd "${SAPERATOR}" ''
}

_get_last_record_index(){
	rg "^${SAPERATOR}" -n  "$DB_FILE" | 
	sd "${SAPERATOR}" "" | 
	tail -n 1| cut -d: -f1
}

_get_code() {

	item="$1"
	[ -z "$item" ] && echo "Canceling..." && exit 7
	
	line=$(echo "$item" | cut -d: -f1)
	line=$((line+1))

	range until $line "^$SAPERATOR" "$DB_FILE"

}

_ensure_title(){

	_title=$(tool line 2 "$PLAY_FILE")
	if [[ $_title == "$PLAY_TITLE"* ]]; then

		_title=`echo $_title | tool cutd '!' 2-`
		_title=`echo $_title | tool cut 1 | tool trim`

		if [ -z "$_title" ]; then

			if ! title=$(show input 'Save title?'); then
				color "Empty!: Cancel: Operations."
				return 7
			fi

		else
			title="$_title"
		fi
	fi

	echo "$title"
}

_run() {
	shift
	_play_runner "$@"
}


if [ "$#" -gt 0 ]; then
	cmd="$1"

	if rg -q "^fn_$cmd" "$0"; then
		"fn_$1" "$@" 
	else
 		_play_runner "$@"
 	fi
else
	_play_runner "$@"
fi
