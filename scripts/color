#!/bin/bash

ANSI_ESC=$'\033'
ANSI_CSI="${ANSI_ESC}["
# ANSI_OSC="${ANSI_ESC}]"
# ANSI_ST="${ANSI_ESC}\\"

ansi::rgb() {
    printf '%s38;2;%s;%s;%sm' "$ANSI_CSI" "$1" "$2" "$3"
}

ansi::bgRgb() {
    printf '%s48;2;%s;%s;%sm' "$ANSI_CSI" "$1" "$2" "$3"
}


ansi::resetbg() {
    printf '%s49m' "$ANSI_CSI"
}

ansi::resetcolor() {
    printf '%s0m' "$ANSI_CSI"
}

ansi::resetfg() {
    printf '%s39m' "$ANSI_CSI"
}


# ============================ Color

ansi::white() {
    printf '%s37m' "$ANSI_CSI"
}

ansi::white2() {
    printf '%s97m' "$ANSI_CSI"
}

ansi::yellow() {
    printf '%s33m' "$ANSI_CSI"
}

ansi::yellow2() {
    printf '%s93m' "$ANSI_CSI"
}

ansi::black() {
    printf '%s30m' "$ANSI_CSI"
}

ansi::black2() {
    printf '%s90m' "$ANSI_CSI"
}

ansi::blue() {
    printf '%s34m' "$ANSI_CSI"
}

ansi::blue2() {
    printf '%s94m' "$ANSI_CSI"
}

ansi::cyan() {
    printf '%s36m' "$ANSI_CSI"
}

ansi::cyan2() {
    printf '%s96m' "$ANSI_CSI"
}

ansi::magenta() {
    printf '%s35m' "$ANSI_CSI"
}

ansi::magenta2() {
    printf '%s95m' "$ANSI_CSI"
}

ansi::red() {
    printf '%s31m' "$ANSI_CSI"
}

ansi::red2() {
    printf '%s91m' "$ANSI_CSI"
}

ansi::green() {
    printf '%s32m' "$ANSI_CSI"
}

ansi::green2() {
    printf '%s92m' "$ANSI_CSI"
}




ansi::bgColor() {
    printf '%s48;5;%sm' "$ANSI_CSI" "$1"
}

ansi::bgBlack() {
    printf '%s40m' "$ANSI_CSI"
}

ansi::bgBlack2() {
    printf '%s100m' "$ANSI_CSI"
}

ansi::bgBlue() {
    printf '%s44m' "$ANSI_CSI"
}

ansi::bgBlue2() {
    printf '%s104m' "$ANSI_CSI"
}

ansi::bgCyan() {
    printf '%s46m' "$ANSI_CSI"
}

ansi::bgCyan2() {
    printf '%s106m' "$ANSI_CSI"
}

ansi::bgGreen() {
    printf '%s42m' "$ANSI_CSI"
}

ansi::bgGreen2() {
    printf '%s102m' "$ANSI_CSI"
}

ansi::bgMagenta() {
    printf '%s45m' "$ANSI_CSI"
}

ansi::bgMagenta2() {
    printf '%s105m' "$ANSI_CSI"
}

ansi::bgRed() {
    printf '%s41m' "$ANSI_CSI"
}

ansi::bgRed2() {
    printf '%s101m' "$ANSI_CSI"
}

ansi::bgWhite() {
    printf '%s47m' "$ANSI_CSI"
}

ansi::bgWhite2() {
    printf '%s107m' "$ANSI_CSI"
}

ansi::bgYellow() {
    printf '%s43m' "$ANSI_CSI"
}

ansi::bgYellow2() {
    printf '%s103m' "$ANSI_CSI"
}





ansi::bold() {
    printf '%s1m' "$ANSI_CSI"
}

ansi::color() {
    printf '%s38;5;%sm' "$ANSI_CSI" "$1"
}


ansi::fraktur() {
    printf '%s20m' "$ANSI_CSI"
}

ansi::frame() {
    printf '%s51m' "$ANSI_CSI"
}

ansi::faint() {
    printf '%s2m' "$ANSI_CSI"
}

ansi::underline() {
    printf '%s4m' "$ANSI_CSI"
}

ansi::bell() {
    printf "%s" $'\007'
}

ansi::blink() {
    printf '%s5m' "$ANSI_CSI"
}


# Function to print text in specified color using ANSI escape codes
clr() {
    local color
    local text
    local result=""

    while [ $# -gt 0 ]; do
        case "$1" in
        --rgb)          color=$(ansi::rgb); shift; text="$1"; ;;
        --bgRgb)        color=$(ansi::bgRgb); shift; text="$1"; ;;
        --resetbg)      color=$(ansi::resetbg); shift; text="$1"; ;;
        --resetcolor)   color=$(ansi::resetcolor); shift; text="$1"; ;;
        --resetfg)      color=$(ansi::resetfg); shift; text="$1"; ;;
        --white)        color=$(ansi::white); shift; text="$1"; ;;
        --white2)       color=$(ansi::white2); shift; text="$1"; ;;
        --yellow)       color=$(ansi::yellow); shift; text="$1"; ;;
        --yellow2)      color=$(ansi::yellow2); shift; text="$1"; ;;
        --black)        color=$(ansi::black); shift; text="$1"; ;;
        --black2)       color=$(ansi::black2); shift; text="$1"; ;;
        --blue)         color=$(ansi::blue); shift; text="$1"; ;;
        --blue2)        color=$(ansi::blue2); shift; text="$1"; ;;
        --cyan)         color=$(ansi::cyan); shift; text="$1"; ;;
        --cyan2)        color=$(ansi::cyan2); shift; text="$1"; ;;
        --magenta)      color=$(ansi::magenta); shift; text="$1"; ;;
        --magenta2)     color=$(ansi::magenta2); shift; text="$1"; ;;
        --red)          color=$(ansi::red); shift; text="$1"; ;;
        --red2)         color=$(ansi::red2); shift; text="$1"; ;;
        --green)        color=$(ansi::green); shift; text="$1"; ;;
        --green2)       color=$(ansi::green2); shift; text="$1"; ;;
        --bgColor)      color=$(ansi::bgColor); shift; text="$1"; ;;
        --bgBlack)      color=$(ansi::bgBlack); shift; text="$1"; ;;
        --bgBlack2)     color=$(ansi::bgBlack2); shift; text="$1"; ;;
        --bgBlue)       color=$(ansi::bgBlue); shift; text="$1"; ;;
        --bgBlue2)      color=$(ansi::bgBlue2); shift; text="$1"; ;;
        --bgCyan)       color=$(ansi::bgCyan); shift; text="$1"; ;;
        --bgCyan2)      color=$(ansi::bgCyan2); shift; text="$1"; ;;
        --bgGreen)      color=$(ansi::bgGreen); shift; text="$1"; ;;
        --bgGreen2)     color=$(ansi::bgGreen2); shift; text="$1"; ;;
        --bgMagenta)    color=$(ansi::bgMagenta); shift; text="$1"; ;;
        --bgMagenta2)   color=$(ansi::bgMagenta2); shift; text="$1"; ;;
        --bgRed)        color=$(ansi::bgRed); shift; text="$1"; ;;
        --bgRed2)       color=$(ansi::bgRed2); shift; text="$1"; ;;
        --bgWhite)      color=$(ansi::bgWhite); shift; text="$1"; ;;
        --bgWhite2)     color=$(ansi::bgWhite2); shift; text="$1"; ;;
        --bgYellow)     color=$(ansi::bgYellow); shift; text="$1"; ;;
        --bgYellow2)    color=$(ansi::bgYellow2); shift; text="$1"; ;;
        --bold)         color=$(ansi::bold); shift; text="$1"; ;;
        --color)        color=$(ansi::color); shift; text="$1"; ;;
        --fraktur)      color=$(ansi::fraktur); shift; text="$1"; ;;
        --frame)        color=$(ansi::frame); shift; text="$1"; ;;
        --faint)        color=$(ansi::faint); shift; text="$1"; ;;
        --underline)    color=$(ansi::underline); shift; text="$1"; ;;
        --bell)         color=$(ansi::bell); shift; text="$1"; ;;
        --blink)        color=$(ansi::blink); shift; text="$1"; ;;
            *)
                shift
                ;;
        esac

        if [ -n "$color" ]; then
            # result+="$(echo -e "${color}${text}\033[0m")\n"
            result+="$(echo -e "${color}${text}\033[0m")\n"
        fi
        color=""
        shift
    done

    echo -e "$result"
}

# Example usage
clr --black 'this white text' --green 'my text is green' --bold 'Im the bold'
clr --black 'this white text' --yellow2 'my text is green' --red2 'Im the bold'
clr --faint 'this faint' --bgWhite 'frame text' --fraktur 'Im the bold'

