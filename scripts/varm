#!/bin/bash
#FILE! Persistent Bash variables Manager


var_file="$TT_BASH/VARIABLE"
temp_file="$TT_TEMP"
shared_file="$TT_BASH/shared"

fn_dir(){	# Append current dir to VARIABLE as Env Path

	key=$(basename "$PWD" | tr '[:lower:]' '[:upper:]')
	item="$(.relative $PWD | warp double)"

	echo "${key}=${item}" # >> "${var_file}"
	# _make_uniq

}

fn_sub(){	# Open VARIABLE File
	st open "$var_file"
}

fn_file(){	# Append Selected file to VARIABLE as Env Path

	key=$(basename "$2" |warp str . |  warp upper)
	item=$(.relative "$2" | warp double)
	echo "${key}=${item}"

}


fn_append_recents(){	# Append Relative path to Recents file
	filepath=$(fn_relative "$2")
	echo "$filepath" >> "${TT_VAR}/${3}.ttvar"
}


fn_relative(){	# get relative path by env variables like realpath

	local thedir
	arg="${!#}"
	real=$(realpath "$arg")

	if [ -f "$arg" ]; then
		thedir=$(dirname "$real")
	elif [ -d "$arg" ]; then
		thedir="$real"
	fi

	item=$(_loop_parent "$thedir" | warp head '$')
	itempath=$(eval echo "$item")
	echo "${real/$itempath/$item}"

}


_loop_parent(){

	local dirs="$1"

	while [ "$dirs" != "/" ]; do
		item="$(_find_env $dirs)"
		if [ "$item" ]; then
			break
		fi
	    dirs=$(dirname "$dirs")
	done

	if [ ! "$item" ]; then
		item="HOME=/home/"
	fi
	echo "$item"

}


fn_set_var(){

	echo "${3}" > "${TT_VAR}/${2}.ttvar"
}

fn_set_shared(){

	# maybe: append insert at index using sed
	if rg -qF "$2" "$shared_file"; then
		exit 7
	fi
	echo "export ${2}=$3" >> "$shared_file"
	kill -SIGUSR1 $(pgrep -o bash)

}

fn_get_var(){
	read -r input < "${TT_VAR}/${2}.ttvar"; echo "$input"
}

fn_get_var_file(){
	echo "${TT_VAR}/${2}.ttvar"
}


fn_set_recents(){
	append_head "$3" "${TT_VAR}/${2}.ttvar"
}


fn_append_head(){
	{
		echo "$1"
		cat "$3"
	} > ${TT_TEMP}

	cat "${TT_TEMP}" | awk '!seen[$0]++ && NF' > "$3"
}


fn_append_clean(){	
	{
		cat "$3"
		echo "$2"
	} > ${TT_TEMP}
	
	cat "${TT_TEMP}" | awk '!seen[$0]++ && NF' > "$3"
}

fn_append_recents(){
	echo "$2" >> "${TT_VAR}/${3}.ttvar"
}


fn_list_var(){

	if [[ $2 == "-n" ]]; then
		rg '^' -n "${TT_VAR}/${3}.ttvar"
	else
		cat "${TT_VAR}/${2}.ttvar"
	fi
}


#=========== private ======================
_find_env(){
	regex='^(TT|Tt|XDG|HOME)'
	export | cut -d " " -f 3| rg "$regex" | 
	rg '"'$1'"' -F | cut -d= -f 1
}

_make_uniq(){
	cat "$var_file" | awk -F '=' '!seen[$0]++ && NF' > "$temp_file"
	mv "$temp_file" "$var_file"
}



"fn_$1" "$@"
