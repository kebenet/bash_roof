#!/bin/bash

dbfile="$BARTIB_FILE"
yaml_file="$TT_VAR/tree_structure.ttdb"
play_file="$TT_BASH/scripts/._task_terabo.yaml"
SAPERATOR="+ TASK-RECORD"
PRJ_SEP='[+] Project'

fn_new(){	# starts a new activity
	if [ ${!#} == '-s' ]; then
		_save
	fi

	{
		echo "- WELCOME : TERABO Task .Inc "
		echo -e "# Title : "
		echo -e "+ Project : $(_get_git_dir)"
		echo -e "\t- Task : "
	} > "$play_file"

	st reload "$play_file"

}

fn_save() {	# save task item into db with title
	local title

	# get title at line 2 in Play file
	_title=$(awk 'NR==2 {print}' "$play_file")

	if [[ $_title == '# Title'* ]]; then

		_title=`echo $_title | cut -d':' -f2- |  awk '{$1=$1};1'`
		
		if [ -z "$_title" ]; then
			read -rp "SAVE last Title ❯ " title	
			[ -z "$title" ]&& color 'Cancel: Operation.' && exit 7
		else
			title="$_title"
		fi

	fi

	newdate=$(date +%d-%m-%Y)
	# get line at Project
	line=`rg "^${PRJ_SEP}" -nm 1 "$play_file" | cut -d: -f1`

	{
		echo "${SAPERATOR} : $title : $newdate"
		awk "NR>=$line {print}" "$play_file"
	} >> "$yaml_file"

}


_new(){	# starts a new activity

	[ -z "$2" ] && echo "On must defind Description" && exit 7
	[ -z "$3" ] && echo "On must defind project Name" && exit 7

	bartib start -d "$2" -p "$3"

}

fn_on(){	# starts a new activity
	[ -z "$2" ] && echo "Remember to use Number to On activity"
	bartib continue "${2:-0}"
}

fn_off(){	# stops all currently running activities
	bartib stop
}

fn_cancel(){	# cancels all currently running activities
	bartib cancel

}

fn_edit(){	# opens the activity log in an editor
	st open "$BARTIB_FILE"
}

fn_check(){	# checks file and reports parsing errors
	bartib check
}

fn_resume(){	# continues a previous activity
	bartib continue "${2:-0}"
}

fn_last(){	# displays the descriptions and projects of recent activities
	bartib last
}

fn_ls(){	# list recent activities by Date | Name Date
	bartib list --today
}

fn_yesterday(){	# list recent activities by yesterday
	bartib list --yesterday
}

fn_week(){	# list recent activities by week
	bartib list --current_week
}

fn_lsc(){	# lists all currently running activities
	bartib current
}

fn_lsp(){	# list all projects
	bartib projects
}

fn_report(){	# reports duration of tracked activities
	bartib report
}


fn_db() {	# Open Play Database file
	st open "$yaml_file"
}

fn_sub() {	# Open Play file
	st open "$play_file"
}


# private ______

_get_git_dir(){
	git rev-parse --git-dir | awk -F '/' '{print $(NF-1)}' ||
	echo $(basename $PWD)
}

_search() {

	item=$(rg "^${SAPERATOR}" -n  "$yaml_file"| sd "${SAPERATOR}" "" \
	| cut -d: -f 1,2| fzy)
	_get_code "$item"
}

_get_code() {

	item="$1"
	[ -z "$item" ] && echo "Canceling..." && exit 7
	
	line=$(echo "$item" | cut -d: -f1)
	line=$((line+1))

	range until $line "^$SAPERATOR" "$yaml_file"
}



"fn_$1" "$@" 