#!/bin/bash
#TITLE! read tab as tree for editing

thefile="$TT_VAR/tree_structure.ttdb"
topindex=$(rg -n "^#\s\w+" "$thefile" | cut -d: -f1| tr '\n' ' '| warp trim)
tree_varname='tree_info'
tree_info=$(varm get_var "$tree_varname")
tabchar=

IFS=: read -r active_index tabcount <<< "$tree_info"


inctab(){
	tabcount=$((tabcount+1))
}

reset_tab(){
	tabcount=0
}

gettab(){

	[ $tabcount -eq 0 ] && printf '' && return
	printf '\t%.0s' $(seq 1 $tabcount)

}

start(){
	rg -N --color=never "^#\s\w+.*" "$thefile" |
	sd '(#)' "$(color --red '$1')" |
	sd '(Task|Wish|Done|Cancel)' "$(color --faint '$1')"
}


goin_all(){
	range print "$1" '$' "$thefile" | 
	awk -v count=$tabcount -F'\t' '{if(NF<count+1) exit; print $0}'
}


showchild(){
	range print "$1" '$' "$thefile" | 
	awk -v count=$tabcount -F'\t' '{if(NF!=count+1) exit; print $0}'
}

show(){

	last=${!#}
	[[ ! $last =~ ^[0-9]+$ ]] && last=1
	
	index=$(echo "$topindex" | cut -d ' ' -f"$last")

	# title
	item=$(sed -n "${index}p" "$thefile")
	color --faint "$item"

	nindex=$(rg -n "^$item" "$thefile" | cut -d: -f1)

	nindex=$((nindex+1))
	# tab count base on current active line
	# tabcount=$((tabcount+1))

	# show by title and tab nindex
	showchild $nindex
	# save_var "$index" "$tabcount"
}


next(){
	inc_index
	show $active_index
}


prev(){
	dec_index
	show $active_index
}

show_by_tab(){
	inc_index
	showchild $active_index
}

inc_index(){
	count=$(wc -w <<<$topindex)
	active_index=$(( active_index % count + 1 ))
	echo "$active_index"
}

dec_index(){
	count=$(wc -w <<<$topindex)
	active_index=$(( active_index % count - 1 ))
	echo "$active_index"
}

save_var(){
	item="$1:$2"
	varm set_var "$tree_varname" "$item"
}

new_node(){
	index="$2"
}

moveto(){
	cat "$thefile"
}

db(){
	st open "$thefile"
}

dbvar(){
	st open $(varm get_var_file "$tree_varname")
}



app(){
	show 
}

on_exit(){
	save_var "$active_index" "$tabcount"	
}

trap on_exit EXIT

"$1" "$@"