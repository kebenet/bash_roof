#!/bin/bash
#TITLE! read tab as tree for editing

thefile="$TT_VAR/tree_structure.ttdb"
topindex=$(rg -n "^#\s\w+" "$thefile" | cut -d: -f1| tr '\n' ' '| warp trim)
tree_varname='tree_info'
tree_info=$(varmem get "$tree_varname")
# tabchar=

IFS=: read -r active_index selected_top tabcount <<< "$tree_info"

show(){

	last=${!#}
	[[ ! $last =~ ^[0-9]+$ ]] && active_index=1
	
	inc_selected

	# title
	item=$(sed -n "${selected_top}p;${selected_top}q" "$thefile")
	color --faint "$item"

	index=$(rg -n "^$item" "$thefile" | cut -d: -f1)

	index=$((index+1))

	# show by title and tab index
	showby_index $index
}

info(){
	echo "active_index	" "$active_index"
	echo "selected_top	" "$selected_top"
	echo "tabcount	" "$tabcount"
}



start(){
	rg -N --color=never "^#\s\w+.*" "$thefile" |
	sd '(#)' "$(color --red '$1')" |
	sd '(Task|Wish|Done|Cancel)' "$(color --faint '$1')"
}


goin_all(){
	range print "$1" '$' "$thefile" | 
	awk -v count="$tabcount" -F'\t' '{if(NF<count+1) exit; print $0}'
}


showby_index(){
	range print "$1" '$' "$thefile" | 
	awk -v count="$tabcount" -F'\t' '{if(NF!=count+1) exit; print $0}'
}

showby_tab(){
	range print "$1" '$' "$thefile" | 
	awk -v count="$2" -F'\t' '{if(NF!=count+1) exit; print $0}'
}


selected(){
	inc_index
	inc_selected
	# get main level title 
	sed -n "${selected_top}p" "$thefile"
}


child(){

	tcount=$(get_tab)
	showby_tab "$selected_top" $tcount
}

parent(){
	dec_tab
}

next(){
	inc_index
	show $active_index
}


prev(){
	dec_index
	show $active_index
}

inc_selected(){
	selected_top=$(echo "$topindex" | cut -d ' ' -f"$active_index")
}

inc_index(){
	count=$(wc -w <<<"$topindex")
	active_index=$(( active_index % count + 1 ))
	# echo "$active_index"
}

dec_index(){
	count=$(wc -w <<<"$topindex")
	active_index=$(( (active_index + count - 2) % count + 1 ))
	# echo "$active_index"
}

inc_tab(){

	count=$(echo -n "$string" )
	parent=$(selected_top)
	tabcount=$((tabcount+1))
}

dec_tab(){
	tabcount=$((tabcount-1))
}

reset_tab(){
	tabcount=1
}

get_tab(){
	index=$((selected_top+1))
	count=$(sed -n "${index}p" "$thefile" | 
		awk 'BEGIN{FS="\t"} /^[\t]+/{print NF-1}')
	[ -z "$count" ] && echo 0 || echo "$count"
}

print_level_innode(){	# print level, then sub node 
	index=$((selected_top))
	color --faint "$item"
	awk -v idx=$index -v tab=$tabcount \
	'NR > idx { n = gsub(/\t/, "&"); if (n == tab) 
	print; else exit }' "$thefile"
}

printin_node(){	# move in, then get same level
	index=$((selected_top))
	awk -v idx=$index -v tab=$tabcount \
	'NR > idx { n = gsub(/\t/, "&"); if (n == tab) 
	{ sub(/^\t+/, ""); print } else exit }' "$thefile"
}

print_level(){	# get same level, no exit
	index=$((selected_top))
	awk -v idx=$index -v tab=0 \
	'{ n = gsub(/\t/, "&"); if (n == tab)
	print; }' "$thefile"
}


gen_tab(){
	[ "$tabcount" -eq 0 ] && printf '' && return
	printf '\t%.0s' $(seq 1 "$tabcount")
}



new_node(){
	index="$2"
}

moveto(){
	cat "$thefile"
}

db(){
	st open "$thefile"
}

dbvar(){
	st open "$(varmem get_file $tree_varname)"
}



reset(){
	active_index=1
	selected_top=1
	tabcount=1
}

save_var(){
	item="${active_index:-1}:${selected_top:-1}:${tabcount:-1}"
	varmem set "$tree_varname" "$item"
}

on_exit(){
	save_var	
}

trap on_exit EXIT

"$1" "$@"