#!/bin/bash
#TITLE! read tab as tree for editing

thefile="$TT_VAR/tree_structure.ttdb"
topindex=$(rg -n "^#\s\w+" "$thefile" | cut -d: -f1| tr '\n' ' '| warp trim)
tree_varname='tree_info'
tree_info=$(varm get_var "$tree_varname")
# tabchar=

IFS=: read -r active_index selected_top tabcount <<< "$tree_info"

show(){

	last=${!#}
	[[ ! $last =~ ^[0-9]+$ ]] && active_index=1
	
	index=$(echo "$topindex" | cut -d ' ' -f"$active_index")
	selected_top="$index"
	# title
	item=$(sed -n "${index}p" "$thefile")
	color --faint "$item"

	nindex=$(rg -n "^$item" "$thefile" | cut -d: -f1)

	nindex=$((nindex+1))

	# show by title and tab nindex
	showby_index $nindex
}

info(){
	echo "active_index	" "$active_index"
	echo "selected_top	" "$selected_top"
	echo "tabcount	" "$tabcount"
}



start(){
	rg -N --color=never "^#\s\w+.*" "$thefile" |
	sd '(#)' "$(color --red '$1')" |
	sd '(Task|Wish|Done|Cancel)' "$(color --faint '$1')"
}


goin_all(){
	range print "$1" '$' "$thefile" | 
	awk -v count="$tabcount" -F'\t' '{if(NF<count+1) exit; print $0}'
}


showby_index(){
	range print "$1" '$' "$thefile" | 
	awk -v count="$tabcount" -F'\t' '{if(NF!=count+1) exit; print $0}'
}

showby_tab(){
	range print "$1" '$' "$thefile" | 
	awk -v count="$tabcount" -F'\t' '{if(NF!=count+1) exit; print $0}'
}

selected(){
	inc_index
	inc_selected
	sed -n "${selected_top}p" "$thefile"
}

child(){
	# goto child element then print child only
	# get next line by activetop from topindex
	# get active topindex
	inc_tab
}

parent(){
	dec_tab
}

next(){
	inc_index
	show $active_index
}


prev(){
	dec_index
	show $active_index
}

inc_selected(){
	selected_top=$(echo "$topindex" | cut -d ' ' -f"$active_index")
}

inc_index(){
	count=$(wc -w <<<"$topindex")
	active_index=$(( active_index % count + 1 ))
	# echo "$active_index"
}

dec_index(){
	count=$(wc -w <<<"$topindex")
	active_index=$(( (active_index + count - 2) % count + 1 ))
	# echo "$active_index"
}

inc_tab(){
	tabcount=$((tabcount+1))
}

dec_tab(){
	tabcount=$((tabcount-1))
}

reset_tab(){
	tabcount=0
}

gettab(){

	[ "$tabcount" -eq 0 ] && printf '' && return
	printf '\t%.0s' $(seq 1 "$tabcount")

}



new_node(){
	index="$2"
}

moveto(){
	cat "$thefile"
}

db(){
	st open "$thefile"
}

dbvar(){
	st open "$(varm get_var_file $tree_varname)"
}



app(){
	show 
}

save_var(){
	item="${active_index:-1}:${selected_top:-1}:${tabcount:-1}"
	varm set_var "$tree_varname" "$item"
}

on_exit(){
	save_var	
}

trap on_exit EXIT

"$1" "$@"