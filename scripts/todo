#!/bin/bash
#FILE! Working Que List 

jumpfile="${TT_PATTERN}/question.md"

edit_line(){

    item=$(cat "$jumpfile" | fzy | sed 's/^-\ //g')
    echo "$item"

    if [ ! "${item}" ]; then 
        echo "EMPTY! User Cancel operation"
        return 1
    else 
        idx=$(_rg_index "$item")
        sed -i "${idx}a\- ${new}" "${jumpfile}"
        echo "${BOLD}DONE save $(clr Answer)"
    fi
}

delete_question(){

    item=$(cat "$jumpfile" | fzy)

    if [ "${item}" ]; then 
        echo "EMPTY! User Cancel operation"
        return 1
    fi

    read -p "Question and Answer will be remove.. ${ARROW} " new

    if [ "$new" = "y" ]; then

        # CODE: TODO delete range

        # CODE: single item. this grep only print not match lines
        grep -v -- "$item" "$jumpfile" > temp && mv temp "$jumpfile"
    fi
}

new_answer(){

    # list and select
    item=$(rg -n '^#' "$jumpfile" | fzy)

    if [ ! "${item}" ]; then 
        echo "EMPTY! User Cancel operation"
        return 1
    fi

    read -p "ANSWER? ${ARROW} " new

    if [ ! "${new}" ]; then 
        echo "EMPTY! User Cancel operation"
        return 1
    else
        # CODE: sed append to below index
        idx=$(_rg_index "$item")
        sed -i "${idx}a\- ${new}" "${jumpfile}"
        echo "${BOLD}DONE save $(clr Answer)"
    fi
}

new_question(){

    jumpfile="$(pattern 'question')"
    # CODE: read
    read -p "Question ${ARROW}" -i "yes" new

    # CODE: if string empty
    if [ ! "${new}" ]; then 
        echo "EMPTY! User Cancel operation"
        return 1
    else 
        echo "# $new" >> "$jumpfile"
        echo "DONE save Question"
    fi
}

smg(){
   echo -n "${BOLD}${1}"
}

sy(){
   echo -n "${RED}${YELLOW}${1}${END}"
}

sbr(){
   echo -n "${MAGENTA}${1}${END}"
}
sbr1(){
   echo -n "${RED}${1}${END}"
}

clear -x
show_msg2 "TODO"  "Working Task"
echo

word="[a-zA-Z_]"
wordorelse="\s($word)|[a-zA-Z_\-&|]"
reg2="'(\w+)"
regbrw="($word)($wordorelse)*"
regbr="(\[($regbrw)\])"

rg "^(#)" --colors 'match:none' \
    -r "$(smg '$1')" "${jumpfile}" \
    | rg "${regbr}" -n --passthru --colors 'match:none'\
    -r "$(sbr1 '$1')"

read -p "⬢ edit ❯ " input

if [[ $input =~ ^[0-9]+$ ]]; then
    echo "The string is a number."
else
    echo "The string is not a number."
fi
