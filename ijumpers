#!/bin/bash
#FILE! JUMP operations

cd_child(){
	[ ! "$1" ] && color 'Cant : Empty Query!'
	item=$(fd "$1" -td -d 1 -H)
	cd "$item" || $pwd
	ls
}

qq(){

	if [ $# -eq 0 ]; then
		command pushd +$((${#DIRSTACK[@]}-1)) > /dev/null
		return 0
	fi

	jumpdir="${TT_VAR}/jump_folders.ttpath"

	for item in "$@"
	do
		name=$(cat "$jumpdir" | fzy -e "$item" | head -n 1) # get full path

		item=$(expand_env "$name")
		pushd -n "$item"
	done
}

cdp(){

	var_name="PWD_PROJECT"

	if [ "$#" -gt 0 ]; then

		if [[ "$1" == "." ]]; then
		    varm get_var "$var_name"
		    
		elif [[ "$1" == "ls" ]]; then
			list_var "$var_name"
		    
		elif [[ "$1" == "cd" ]]; then
			
			#CODE! select var to top as change pwdp
			item=$(list_var "$var_name" | fzy)
			cd "${item}"
			set_recents "$var_name" "${item}"
		fi
	else
		set_recents "$var_name" "${PWD}"
	    message "DONE add CDP: ${PWD}"
	    message "Aviable CMD: ls cd cdir ."
	fi
	
}



j(){

	if [ "$#" -eq 0 ]; then
	    message "EMPTY Arg: provide string to search.."
	    return 7
	fi

	# support multiple words?

	jumpfile="${TT_VAR}/fd_exclude_folders.pattern"

	#CODE! the exclude folder make fd more fast. less travel ops
	exclude="$(cat "$jumpfile" | tr '\n' ' ')"

	list=$(eval "fd ${1} -t d -H "$exclude" $TT_WORKSPACE")

	items="$(echo ${list} | tr ' ' '\n' | fzy -e ${1})"
	

	count="$(echo "$items" | tr ' ' '\n'| wc -l)"

	# echo "$count"

	if [ "$count" -eq 1 ]; then
    	cd "$items"
	else
    	# echo  "$items"
	    cd "$(echo ${items} |tr ' ' '\n' | fzy -q ${1})"
	fi

	ls

}


zz(){

	jumpdir="${TT_VAR}/jump_folders.ttpath"

	if [ -z "$1" ];then
	    cat "$jumpdir" | tool lastf '/' | rg '^' -n| pr -t -3
	elif [[ "$1" =~ ^[0-9]+$ ]]; then
    	item=$(sed -n "${1}p" "$jumpdir")
    	item=$(expand_env "$item")
    	color ${item}
    	cd "$item"
    	ls
    else
	    item=`cat "$jumpdir" | fzf --filter="$1" | head -n 1`
    	item=$(expand_env "$item")
    	color ${item}
    	cd "$item"
    	ls
	fi
	
}




